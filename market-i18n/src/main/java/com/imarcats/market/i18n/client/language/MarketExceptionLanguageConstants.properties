orderAlreadySubmitted = Order has already been Submitted
executedOrderCannotBeResubmitted = Executed Order cannot be Resubmitted
orderHasAlreadyBeenCanceled = Order has already been Canceled
executedOrderCannotBeCanceled = Executed Order cannot be Canceled
unsupportedQuoteChangeTrigger = Unsupported Quote Change Trigger
unsupportedOrderExpirationInstruction = Unsupported Order Expiration Instruction
submittedOrderCannotBeDeletedCancelFirst = Submitted Order cannot be Deleted, you need to Cancel it first

orderSizeCannotBeZero = Order Size cannot be Zero
orderIsTooBigForTheMarket = Order is too Big for this Market
orderIsTooSmallForTheMarket = Order is too Small for this Market
orderSideCannotBeIdentified = Order Side cannot be Identified
orderTypeCannotBeIdentified = Order Type cannot be Identified
orderCannotBeSubmittedToNonActiveMarket = Order cannot be Submitted to Non-Active Market
orderSizeIsSmallerThanMinimumSizeOfExecution = Order Size is Smaller than Minimum Size of Execution
orderShouldEitherHaveMinimumSizeOfExecutionOrEntireOrderAtOnceSet = Order should either have Minimum Size of Execution Or Entire Order at Once set
immediateOrCancelOrderIsNotSupportedOnCallMarket = Immediate-or-Cancel Order is Not-Supported on Call Market
immediateOrCancelOrderIsNotSupportedWhenTheMarketIsNotOpen = Immediate-or-Cancel Order is Not-Supported when the Market is Not-Open
onlyGoodTillCancelOrderIsSupportedOnCallMarket = Only Good-till-Cancel Order is Supported on Call Market
marketOrderMustBeImmediateOrCancel = Market Order must be defined to be Immediate-or-Cancel 
hiddenOrderNotSupportedOnMarket = Hidden Order is Not Supported on this Market
sizeRestrictionOnOrdersNotSupportedOnMarket = Size Restriction on Order is Not Supported on this Market
onlyImmediatelyTriggeredOrderIsSupportedOnCallMarket = Only Immediately Triggered Order is Supported on Call Market
marketOrderSubmittedCannotBeFilledOnCallMarket = Market Order submitted makes the size of Standing Market Order the same on a Call Markets
entireOrderAtOnceNotSupportedOnCallMarket = Entire-Order-at-Once is Not Supported on Call Market
minimumExecutionSizeNotSupportedOnCallMarket = Minimum Execution Size is Not Supported on Call Market
entireOrderAtOnceNotSupportedWhenTheMarketIsNotOpen = Entire-Order-at-Once is Not Supported, when the Market is Not Open
minimumExecutionSizeNotSupportedWhenTheMarketIsNotOpen = Minimum Execution Size is Not Supported, when the Market is Not Open
marketOrderIsNotSupportedWhenTheMarketIsNotOpen = Market Order is not supported when the Market is not Open
marketOrderIsNotSupportedOnCallMarket = Market Order is not supported on Call Markets
marketOrderCannotBeSubmittedIfTheOtherSideBookIsEmpty = Market Order cannot be Submitted, if the Other-Side of the Book is Empty
marketOrderCannotBeSubmittedIfTheOtherSideBookHasOnlyMarketOrders = Market Order cannot be Submitted, if the Other-Side of the Book has only Market Orders
orderMustBeSubmittedWithAValidMarketQuote = Order must be Submitted with a Valid Market Quote
orderImprovesQuoteWithMoreThanMaximumQuoteImprovement = Order Improves Quote with more than Maximum Quote Improvement
stopQuoteIsNotDefinedOnStopOrder = Stop Quote is Not-Defined on Stop Order
stopQuoteDifferenceIsNotDefinedOnStopOrder = Stop Quote Difference is Not-Defined on Stop Order
orderCannotBeCreatedOnANonActiveMarket = Order cannot be Created on a Non-Active Market
nonExistentOrder = Non-Existent Order
targetMarketNotSetOnOrder = Target Market not set on Order
unsupportedOrderProperty = Unsupported Order Property
unsupportedOrderPropertyValue = Unsupported Order Property Value
duplicateOrderProperty = Duplicate Order Property
unsupportedOrderPropertyChange = Unsupported Order Property Change
limitOrderMustHaveValidLimitQuote = Limit Order must have valid Limit Quote
nullOrderCannotBeCreated = Null Order cannot be Created
orderIdMustNotBeDefined = Order Id must not be Defined
orderAlreadyExists = Order Already Exists
multipleOrderReturnedForCode = Multiple Order Returned for Code
orderCannotBeCreatedOnNonExistentMarket = Order cannot be Created on Non-Existent Market
limitPriceMustBePositive = Limit Price must be Positive
limitYieldMustBeLessThan100 = Limit Yield must be less than 100
stopPriceMustBePositive = Stop Price must be Positive
stopYieldMustBeLessThan100 = Stop Yield must be less than 100
stopQuoteDifferenceMustBePositive = Stop Quote Difference must be Positive

unsupportedExecutionSystemOrderMatching = Execution System defined on the Market is not supported for Order Matching
unsupportedExecutionSystemPricingRule = Execution System defined on the Market is not supported for Order Pricing
nonActiveMarketCannotBeOpened = Non-Active Market cannot be Opened
nonActiveMarketCannotBeCalled = Non-Active Market cannot be Called
nonActiveMarketCannotBeClosed = Non-Active Market cannot be Closed
nonActiveMarketCannotBeHalted = Non-Active Market cannot be Halted
nonClosedMarketCannotBeOpened = Non-Closed Market cannot be Opened
nonHaltedMarketCannotBeOpened = Non-Halted Market cannot be Opened
nonOpenMarketCannotBeClosed = Non-Open Market cannot be Closed
nonOpenMarketCannotBeHalted = Non-Open Market cannot be Halted
nonCallMarketCannotBeCalled = Non-Call Market cannot be Called
openMarketCanOnlyBeCalled = Open Market can Only be Called
nonExistentMarket = Non-Existent Market

nullMessage = Null Message 
unsupportedMessageTypeOrMessageVersion = Unsupported Message Type or Message Version
unsupportedMarketObjectType = Unsupported Market Object Type

nullListenerCannotBeCreated = Null Listener cannot be Created
listenerCannotBeInstantiated = Listener cannot be Instantiated
listenerCannotBeCreatedWithNullObservedObject = Listener cannot be Created with Null Observed Object
listenerCannotBeQueriedWithNullObservedObject = Listener cannot be Queried with Null Observed Object
listenerCannotBeDeletedWithNullObservedObject = Listener cannot be Deleted with Null Observed Object
listenerCannotBeCreatedWithNullObservedClass = Listener cannot be Created with Null Observed Class
listenerAlreadyExists = Listener Already Exists
multipleListenersReturnedForKey = Multiple Listeners Returned for Key
nonExistentListener = Non-Existent Listener

errorConnectingToMarketSystem = Error Connecting to Market System

internalSystemError = Internal System Error

assetClassCannotBeOverwrittenWithAnOlderVersion = Asset Class cannot be Overwritten with an Older Version of the same Asset Class
assetClassWithoutValidName = Asset Class has no Name, Name must NOT start with, end with or contain space character, see valid characters below
assetClassWithoutDescription = Asset Class has no Valid Description, see valid characters below
assetClassNameCannotBeChanged = Asset Class Name cannot be Changed
assetClassCannotBeDeletedIfItIsAssignedToInstruments = Asset Class cannot be Deleted, if it is Assigned to Instruments
nullAssetClassCannotBeCreated = Null Asset Class cannot be Created
assetClassCannotBeCreatedWithNullName = Asset Class cannot be Created with Null Name
assetClassAlreadyExists = Asset Class Already Exists
multipleAssetClassReturnedForName = Multiple Asset Class Returned for Name
nonExistentAssetClass = Non-Existent Asset Class
tooManyAssetClassesForThisParent = Too Many Asset Classes for this Parent
tooDeepAssetClassTree = Too Deep Asset Class Tree
circularAssetClassTree = Circular Asset Class Tree
assetClassParentNameInvalid = Asset Class Parent Name must NOT start with, end with or contain space character, see valid characters below

productCannotBeOverwrittenWithAnOlderVersion = Product cannot be Overwritten with an Older Version of the same Product
productMustHaveProductValidCode = Product must have Product Code, Code must NOT start with, end with or contain space character, see valid characters below
productMustHaveName = Product must have Valid Name, see valid characters below
productMustHaveDescription = Product must have Valid Description, see valid characters below
productMustHaveProductType = Product must have Product Type
productMustHaveDefinitionDocument = Product must have Definition Document
newProductMustNotHaveProductCodeRolledFrom = New Product must not have Product Code Rolled-From 
newProductMustNotHaveActivationDate = New Product must not have Activation Date
newProductMustNotHaveCreationAudit = New Product must not have Creation Audit
newProductMustNotHaveChangeAudit = New Product must not have Change Audit
newProductMustNotHaveRolloverAudit = New Product must not have Rollover Audit
newProductMustNotHaveApprovalAudit = New Product must not have Approval Audit
newProductMustNotHaveSuspensionAudit = New Product must not have Suspension Audit
newProductMustNotHaveActivationStatus = New Product must not have Activation Audit
newProductMustNotHaveDefinitionDocument = New Product must not have Definition Document
productTypeCannotBeChangedWhileRolledOver = Product Type cannot be Changed while Rolled Over
productDefinitionDocumentCannotBeChangedWhileRolledOver = Product Definition Document cannot be Changed while Rolled Over
productCategoryCannotBeChangedWhileRolledOver = Product Category cannot be Changed while Rolled Over
productSubCategoryCannotBeChangedWhileRolledOver = Product Sub-Category cannot be Changed while Rolled Over
nullProductCannotBeCreated = Null Product cannot be Created
productCannotBeCreatedWithNullCode = Product cannot be Created with Null Code
productAlreadyExists = Product Already Exists
multipleProductsReturnedForCode = Multiple Products Returned for Code
nonExistentProduct = Non-Existent Product
productOnlyInCreatedOrSuspendedStateCanBeChanged = Product cannot be Changed unless it is in Created or Suspended State
productOnlyInCreatedOrSuspendedStateCanBeDeleted = Product cannot be Deleted unless it is in Created or Suspended State
productOnlyInCreatedOrSuspendedStateCanBeApproved = Product cannot be Approved unless it is in Created or Suspended State
productNotInCreatedOrSuspendedStateCanBeSuspended = Product cannot be Suspended if it is in Created or Suspended State
productThatHasNoApprovedDependentInstrumentsCanBeForcedToBeChanged = Product cannot be Changed if it has an Approved Instrument dependent on it
productThatHasNoDependentInstrumentsCanBeDeleted = Product cannot be Deleted if it has an Instrument dependent on it
productCanOnlyBeSuspendedIfDependentObjectsAreSuspended = Product cannot be Suspended if the dependent Instruments are suspended
categoryMustBeValid = Category must be Valid, see valid characters below
subCategoryMustBeValid = Sub-category must be Valid, see valid characters below

instrumentCannotBeOverwrittenWithAnOlderVersion = Instrument cannot be Overwritten with an Older Version of the same Instrument
nullInstrumentCannotBeCreated = Null Instrument cannot be Created
instrumentCannotBeCreatedWithNullCode = Instrument cannot be Created with Null Code
instrumentAlreadyExists = Instrument Already Exists
multipleInstrumentsReturnedForCode = Multiple Instruments Returned for Code
instrumentMustHaveValidInstrumentCode = Instrument must have Instrument Code, Code must NOT start with, end with or contain space character, see valid characters below
instrumentMustHaveName = Instrument must have Valid Name, see valid characters below
instrumentMustHaveDescription = Instrument must have Valid Description, see valid characters below
instrumentMustHaveInstrumentType = Instrument must have Instrument Type
instrumentMustHaveUnderlyingCode = Instrument must have Underlying Code, Code must NOT start with, end with or contain space character, see valid characters below
instrumentMustHaveUnderlyingType = Instrument must have Underlying Type
instrumentMustHaveDenominationCurrency = Instrument must have Valid Denomination Currency, see valid characters below
instrumentMustHaveContractSize = Instrument must have Contract Size
instrumentMustHaveContractSizeUnit = Instrument must have Valid Contract Size Unit, see valid characters below
instrumentMustHaveMasterAgreementDocument = Instrument must have Master Agreement Document
instrumentMustHaveQuoteType = Instrument must have Quote Type
instrumentMustHaveSettlementPriceType = Instrument must have Settlement Price Type
onlyCleanSettlementPriceTypeIsSupportedOnInstruments = Only Clean Settlement Price Type is Supported on Instruments
instrumentMustHaveSettlementType = Instrument must have Settlement Type
instrumentMustHaveDeliveryPeriod = Instrument must have Delivery Period
instrumentMustHaveRecordPurchaseAsType = Instrument must have Record Purchase-as-Type
onlyLongRecordPurchaseAsTypeSupportedOnInstruments = New Position can only be Recorced as Long
instrumentMustHaveDeliveryLocationForPhysicalDelivery = Instrument must have Delivery Location for Physical Delivery
newInstrumentMustNotHaveInstrumentCodeRolledFrom = New Instrument must not have Instrument Code Rolled-from
newInstrumentMustNotHaveActivationDate = New Instrument must not have Activation Date
newInstrumentMustNotHaveCreationAudit = New Instrument must not have Creation Audit
newInstrumentMustNotHaveChangeAudit = New Instrument must not have Change Audit
newInstrumentMustNotHaveRolloverAudit = New Instrument must not have Rollover Audit
newInstrumentMustNotHaveApprovalAudit = New Instrument must not have Approval Audit
newInstrumentMustNotHaveSuspensionAudit = New Instrument must not have Suspension Audit
newInstrumentMustNotHaveActivationStatus = New Instrument must not have Activation Status
newInstrumentMustNotHaveMasterAgreementDocument = New Instrument must not have Master Agreement Document
newInstrumentMustNotHaveAssetClassName = New Instrument must not have Asset Class Name
instrumentTypeCannotBeChangedWhileRolledOver = Instrument Type cannot be Changed while Rolled Over
instrumentAssetClassCannotBeChangedWhileRolledOver = Instrument Asset Class cannot be Changed while Rolled Over
instrumentSubTypeCannotBeChangedWhileRolledOver = Instrument Sub-Type cannot be Changed while Rolled Over
instrumentUnderlyingTypeCannotBeChangedWhileRolledOver = Instrument Underlying Type cannot be Changed while Rolled Over
instrumentMasterAgreementCannotBeChangedWhileRolledOver = Instrument Master Agreement cannot be Changed while Rolled Over
instrumentQuoteTypeCannotBeChangedWhileRolledOver = Instrument Quote Type cannot be Changed while Rolled Over
instrumentDenominationCurrencyCannotBeChangedWhileRolledOver = Instrument Denomination Currency cannot be Changed while Rolled Over
instrumentContractSizeCannotBeChangedWhileRolledOver = Instrument Contract Size cannot be Changed while Rolled Over
instrumentContractSizeUnitCannotBeChangedWhileRolledOver = Instrument Contract Size Unit cannot be Changed while Rolled Over
instrumentSettlementPriceTypeCannotBeChangedWhileRolledOver = Instrument Settlement Price Type cannot be Changed while Rolled Over
instrumentSettlementTypeCannotBeChangedWhileRolledOver = Instrument Settlement Type cannot be Changed while Rolled Over
instrumentDeliveryPeriodCannotBeChangedWhileRolledOver = Instrument Delivery Period cannot be Changed while Rolled Over
instrumentDeliveryLocationCannotBeChangedWhileRolledOver = Instrument Delivery Location cannot be Changed while Rolled Over
instrumentRecordPurchaseAsTypeCannotBeChangedWhileRolledOver = Instrument Record-Purchase-As Type cannot be Changed while Rolled Over
nonExistentInstrument = Non-Existent Instrument
instrumentThatHasNoDependentInstrumentsOrMarketsCanBeSuspended = Instrument that has a Dependent Instrument or Market can be Suspended
instrumentOnlyInCreatedOrSuspendedStateCanBeChanged = Instrument only in Created or Suspended State can be Changed
instrumentOnlyInCreatedOrSuspendedStateCanBeDeleted = Instrument only in Created or Suspended State can be Deleted
instrumentOnlyInCreatedOrSuspendedStateCanBeApproved = Instrument only in Created or Suspended State can be Approved
instrumentNotInCreatedOrSuspendedStateCanBeSuspended = Instrument not in Created or Suspended State can be Suspended
instrumentThatHasNoApprovedDependentInstrumentsOrMarketsCanBeForcedToBeChanged = Instrument, that has no Approved Instruments or Markets dependent on it can be Forced to be Changed
instrumentThatHasNoDependentInstrumentsOrMarketsCanBeDeleted = Instrument, that has no Dependent Instruments or Markets can be Deleted
nonExistentUnderlying = Non-Existent Underlying
instrumentCanOnlyBeApprovedIfUnderlyingIsApproved = Instrument can only be Approved, if Underlying is Approved
instrumentCanOnlyBeSuspendedIfDependentObjectsAreSuspended = Instrument can only be Suspended, if Dependent Objects are Suspended
instrumentMustHaveAssetClassNameForApproval = Instrument must have Asset Class Name for Approval
instrumentMustHaveCurrencyOrUnit = Instrument must have Currency-or-Unit
tooDeepUnderlyingDependency = Too deep dependency for Underlying
circularUnderlyingDependency = Circular dependency for Underlying
isinMustBeValid = ISIN must be a Valid ISIN, see valid characters below
subTypeMustBeValid = Sub-type must be a Valid, see valid characters below

corporateInformationMustHaveName = Corporate Information must have Valid Name, see valid characters below
corporateInformationMustHaveAddress = Corporate Information must have Address
corporateWebsiteMustBeValid = Corporate Website must be valid, see valid characters below

addressMustHaveStreet = Address must have Valid Street, see valid characters below
addressMustHaveCity = Address must have Valid City, see valid characters below
addressMustHaveCountry = Address must have Valid Country, see valid characters below
addressMustHavePostalCode = Address must have Valid Postal Code, see valid characters below

timePeriodMustHaveStartTime = Time Period must have Start Time
timePeriodMustHaveEndTime = Time Period must have End Time
startTimeEndTimeMustHaveSameTimeZone = Start Time and End Time must have same Time Zone
startTimeMustBeforeEndTime = Start Time must be before End Time

timeOfDayMustHaveValidHours = Time-of-Day must have Valid Hours
timeOfDayMustHaveValidMinutes = Time-of-Day must have Valid Minutes
timeOfDayMustHaveValidSeconds = Time-of-Day must have Valid Seconds
timeOfDayMustHaveValidTimeZone = Time-of-Day must have Valid Time Zone

invalidBusinessCalendar = Invalid Business Calendar, \nRequired Format Example: \n2010/04/11,Holiday\n2010/04/12,BusinessDay\n2010/04/13,BusinessDay

nullAuditTrailEntryCannotBeCreated = Null Audit Trail Entry cannot be Created
auditTrailMustHaveDate = Audit Trail Entry must have Date
auditTrailMustHaveAction = Audit Trail Entry must have Action
auditTrailMustHaveUser = Audit Trail Entry must have User
auditTrailMustHaveObjectID = Audit Trail Entry must have Object ID
auditTrailMustHaveObjectType = Audit Trail Entry must have Object Type

nonRollableObjectCannotBeRolledOver = Non-Rollable Object cannot be Rolled Over
objectHasToRemainRollable = Object has to Remain Rollable
underlyingObjectCannotBeRemovedWhileRollover = Underlying Object cannot be Removed while Rollover
underlyingObjectCannotBeAddedWhileRollover = Underlying Object cannot be Added while Rollover
invalidUnderlyingObjectProvidedForRollover = Invalid Underlying Object Provided for Rollover
underlyingObjectProvidedForRolloverIsNotRolledFromTheUnderlyingOfSourceObject = Underlying Object Provided for Rollover is Not Rolled from the Underlying of Source Object
nonApprovedObjectCannotBeReferredInRollover = Non Approved Object cannot be Referred in Rollover
rolloverCannotChangeTheListOfRollableProperties = Rollover cannot Change the List of Rollable Properties
rolloverCannotChangeTheNumberOfProperties = Rollover cannot Change the Number of Properties
rolloverCannotAddOrRemoveProperties = Rollover cannot Add or Remove Properties
rolloverCannotChangeNonRollableProperties = Rollover cannot Change Non-Rollable Properties
rolledObjectsHaveSameCode = Rolled Objects have Same Code
rollablePropertyMustBeValidPropertyOnObject = Rollable Property must be Valid Property on Object

marketOperatorCannotBeOverwrittenWithAnOlderVersion = Market Operator cannot be Overwritten with an Older Version of the same Market Operator
marketOperatorMustHaveCode = Market Operator must have Code, Code must NOT start with, end with or contain space character, see valid characters below
marketOperatorMustHaveName = Market Operator must have Valid Name, see valid characters below
marketOperatorMustHaveDescription = Market Operator must have Valid Description, see valid characters below
marketOperatorMustHaveBusinessEntity = Market Operator must have Business Entity, see valid characters below
newMarketOperatorMustNotHaveCreationAudit = New Market Operator must not have Creation Audit
newMarketOperatorMustNotHaveChangeAudit = New Market Operator must not have Change Audit
newMarketOperatorMustNotHaveApprovalAudit = New Market Operator must not have Approval Audit
newMarketOperatorMustNotHaveSuspensionAudit = New Market Operator must not have Suspension Audit
newMarketOperatorMustNotHaveActivationStatus = New Market Operator must not have Activation Status
newMarketOperatorMustNotHaveMarketOperatorAgreement = New Market Operator must not have Market Operator Agreement
nullMarketOperatorCannotBeCreated = Null Market Operator cannot be Created
marketOperatorMustHaveOwnerUser = Market Operator must have Valid Owner User, see valid characters below
marketOperatorCannotBeCreatedWithNullCode = Market Operator cannot be Created with Null Code
marketOperatorAlreadyExists = Market Operator Already Exists
multipleMarketOperatorReturnedForName = Multiple Market Operator Returned for Name
nonExistentMarketOperator = Non-Existent Market Operator
marketOperatorCanOnlyBeApprovedIfUnderlyingBusinessEntityIsApproved = Market Operator can only be approved, if underlying Business Entity is approved
marketOperatorCanOnlyBeApprovedIfOwnerIsApproved = Market Operator can only be approved, if the Owner is approved
marketOperatorThatHasNoDependentMarketsCanBeSuspended = Market Operator, that has no Dependent Markets can only be Suspended
marketOperatorOnlyInCreatedOrSuspendedStateCanBeChanged = Market Operator only in Created or Suspended State can be Changed
marketOperatorOnlyInCreatedOrSuspendedStateCanBeDeleted = Market Operator only in Created or Suspended State can be Deleted
marketOperatorOnlyInCreatedOrSuspendedStateCanBeApproved = Market Operator only in Created or Suspended State can be Approved
marketOperatorNotInCreatedOrSuspendedStateCanBeSuspended = Market Operator not in Created or Suspended State can be Suspended
marketOperatorThatHasNoApprovedDependentMarketsCanBeForcedToBeChanged = Market Operator, that has Approved Dependent Markets cannot be Forced to be Changed
marketOperatorThatHasNoDependentMarketsCanBeDeleted = Market Operator, that has Dependent Markets cannot be Deleted
marketOperatorMustHaveMarketOperatorAgreementDocument = Market Operator must have Market Operator Agreement Document
marketOperatorCanOnlyBeSuspendedIfDependentObjectsAreSuspended = Market Operator can only be Suspended, if Dependent Objects are Suspended

marketCannotBeOverwrittenWithAnOlderVersion = Market cannot be Overwritten with an Older Version of the same Market
nullMarketCannotBeCreated = Null Market cannot be Created
marketCannotBeCreatedWithNullCode = Market cannot be Created with Null Code
marketAlreadyExists = Market Already Exists
multipleMarketReturnedForCode = Multiple Market Returned for Code
noMarketReturnedForCode = No Market Returned for Code
marketMustHaveName = Market must have Valid Name, see valid characters below
marketMustHaveDescription = Market must have Valid Description, see valid characters below
marketMustHaveCode = Market must have Code, Code must NOT start with, end with or contain space character, see valid characters below
marketCodeMustBeMarketOperatorCodeAndInstrumentCode = Market Code must be InstrumentCode.MarketOperatorCode
marketMustHaveInstrumentCode = Market must have Instrument Code, Code must NOT start with, end with or contain space character, see valid characters below
marketMustHaveMarketOperatorCode = Market must have Market Operator Code, Code must NOT start with, end with or contain space character, see valid characters below
marketMustHaveQuoteType = Market must have Quote Type
marketMustHaveBusinessEntity = Market must have Business Entity
marketMustHaveMinimumContractsTraded = Market must have Minimum Contracts Traded
marketMustHavePositiveMaximumContractsTraded = Market must have Positive Maximum Contracts Traded
marketMustHaveMinimumQuoteIncrement = Market must have Minimum Quote Increment
marketMustHaveTradingSession = Market must have Trading Session
marketMustHaveMarketOperationDay = Market must have Market Operation Day
marketMustHaveMarketTimeZoneID = Market must have a Valid Market TimeZone ID
nonContinuousMarketMustHaveTradingHours = Non-Continuous Market must have Trading Hours
marketMustHaveTradingDayEnd = Market must have Trading Day End
callMarketMustBeNonContinuous = Call Market must be Non-Continuous
marketMustHaveExecutionSystem = Market must have Execution System
marketMustHaveSecondaryOrderPrecedenceRule = Market must have Secondary Order Precedence Rule
marketMustHaveTimePrecedenceAsSecondaryOrderPrecedenceRule = Market must have Time Precedence as Secondary Order Precedence Rule
marketMustHaveUnrestrictedOrderPrecedenceAsFirstSecondaryOrderPrecedenceRuleForMarketsThatAllowOrderSizeRestriction = Market must have Unrestricted Order Precedence as First Secondary Order Precedence Rule for Markets, that Allow Order Size Restriction
marketMustHaveEachSecondaryOrderPrecedenceRuleOnce = Market must have each Secondary Order Precedence Rule Once
marketMustHaveClearingBank = Market must have Clearing Bank
marketMustHaveCommission = Market must have Commission
marketMustHaveCommissionCurrency = Market must have Valid Commission Currency, see valid characters below
marketOnlyInCreatedOrSuspendedStateCanBeChanged = Market must be Created or Suspended State to be Changed
marketOnlyInCreatedOrSuspendedStateCanBeDeleted = Market must be Created or Suspended State to be Deleted
activeMarketCannotBeSuspended = Active Market cannot be Suspended
activeMarketCannotBeDeleted = Active Market cannot be Deleted
activeMarketCannotBeChanged = Active Market cannot be Changed
marketOnlyInCreatedOrSuspendedStateCanBeApproved = Market only in Created or Suspended State can be Approved
marketOnlyInApprovedOrDeactivatedStateCanBeSuspended = Market only in Approved or Deactivated State can be Suspended
marketCanOnlyBeApprovedIfUnderlyingInstrumentIsApproved = Market can only be Approved, if Underlying Instrument is Approved
marketCanOnlyBeApprovedIfUnderlyingMarketOperatorIsApproved = Market can only be Approved, if Underlying Market Operator is Approved
marketCanOnlyBeApprovedIfUnderlyingBusinessEntityIsApproved = Market can only be Approved, if Underlying Business Entity is Approved
marketMustHaveMarketOperatorContract = Market must have Market Operator Contract
nonClosedMarketCannotBeDeactivated = Non-Closed Market cannot be Deactivated
nonActiveMarketCannotBeDeactivated= Non-Active Market cannot be Deactivated
nonApprovedMarketCannotBeActivated = Non-Approved Market cannot be Activated
activeMarketCannotBeActivated = Active Market cannot be Activated
callDateMustBeInFuture = Call Date must be in Future
callDateMustNotBeFurther15Days = Call Date must not be Further 15 Days
callMarketMustBeActivatedForMarketCall = Call Market must be Activated for Market Call
callMarketCannotHaveCircuitBreaker = Call Market cannot have Circuit Breaker
staleObjectCannotBeApproved = Stale Object cannot be Approved, reload the Object

circuitBreakerMustHaveHaltRulesOrMaxQuoteImprovement = Circuit Breaker must have Halt Rules or Max Quote Improvement
circuitBreakerOrderRejectActionMustBeDefinedIfMaximumQuoteImprovementDefined = Circuit Breaker Order Reject Action must be Defined, if Maximum Quote Improvement Defined
circuitBreakerHaltRuleMustHaveQuoteChangeAmount = Circuit Breaker Halt Rule must have Quote Change Amount
circuitBreakerHaltRuleMustHaveQuoteChangeType = Circuit Breaker Halt Rule must have Quote Change Type

nullTradeCannotBeCreated = Null Trade cannot be Created
tradeIdMustNotBeDefined = Trade Id must not be Defined
tradeAlreadyExists = Trade Already Exists
multipleTradeReturnedForKey = Multiple Trade Returned for Primary Key
multipleTradeReturnedForTransactionId = Multiple Trade Returned for Transaction ID
tradeCannotBeCreatedOnNonExistentMarket = Trade cannot be Created on Non-Existent Market

duplicateProperty = Duplicate Property
invalidPropertyName = Invalid Property Name, see valid characters below
invalidPropertyValue = Invalid Property Value, see valid characters below
invalidPropertyUnit =  Invalid Property Unit, see valid characters below

userAttemptedCrossSiteScripting = User attempted Cross-site Scripting Attack
userTriedToSetASystemControlledProperty = User Tried to set System Controlled Property